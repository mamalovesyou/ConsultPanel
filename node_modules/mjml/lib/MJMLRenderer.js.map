{"version":3,"sources":["MJMLRenderer.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAM,QAAQ,QAAQ,OAAR,EAAiB,uBAAjB,CAAR;;IAEe;AACnB,WADmB,YACnB,CAAY,OAAZ,EAAqB,OAArB,EAA8B;0BADX,cACW;;AAC5B,SAAK,OAAL,GAAe,OAAf,CAD4B;AAE5B,SAAK,OAAL,GAAe,OAAf,CAF4B;;AAI5B,QAAI,OAAO,KAAK,OAAL,IAAgB,QAAvB,EAAiC;AACnC,WAAK,aAAL,GADmC;KAArC;GAJF;;eADmB;;oCAUH;AACd,YAAM,wBAAN,EADc;AAEd,WAAK,OAAL,GAAe,8BAAe,KAAK,OAAL,CAA9B,CAFc;AAGd,YAAM,iBAAN,EAHc;;;;6BAMP;AACP,UAAI,CAAC,KAAK,OAAL,EAAc;AACjB,cAAM,qEAA4D,KAAK,OAAL,CAAa,QAAb,EAA5D,CAAN,CADiB;OAAnB;;AAIA,UAAM,oBAAoB,gBAAM,aAAN,CAAoB,iCAAuB,KAAK,OAAL,CAAa,OAAb,CAAqB,MAArB,CAA4B,CAA5B,CAAvB,CAApB,EAA4E,EAAE,MAAM,yBAAc,KAAK,OAAL,CAApB,EAA9E,CAApB,CALC;;AAOP,YAAM,yBAAN,EAPO;AAQP,UAAM,eAAe,iBAAe,oBAAf,CAAoC,iBAApC,CAAf,CARC;;AAUP,YAAM,wDAAN,EAVO;;AAYP,UAAM,eAAe,gCAAiB,EAAE,OAAO,KAAK,OAAL,CAAa,KAAb,EAAoB,SAAS,YAAT,EAAuB,OAAO,+BAAgB,EAAE,SAAS,YAAT,EAAlB,CAAP,EAArE,CAAf,CAZC;;AAcP,aAAO,KAAK,WAAL,CAAiB,YAAjB,CAAP,CAdO;;;;gCAiBG,cAAc;AACxB,UAAI,IAAI,cAAI,SAAJ,CAAc,YAAd,CAAJ,CADoB;;AAGxB,UAAI,yCAAuB,KAAK,CAAL,CAA3B,CAHwB;AAIxB,UAAI,iCAAe,KAAK,CAAL,CAAnB,CAJwB;AAKxB,UAAI,mCAAiB,KAAK,CAAL,CAArB,CALwB;AAMxB,UAAI,wBAAM,KAAK,CAAL,CAAV,CANwB;;AAQxB,UAAI,oBAAoB,cAAI,OAAJ,CAAY,CAAZ,CAApB,CARoB;AASxB,0BAAwB,8BAAY,YAAZ,CAAxB,CATwB;;AAWxB,UAAI,KAAK,OAAL,CAAa,QAAb,oBAAJ,EAAuC;AACrC,4BAAoB,sBAAS,iBAAT,EAA4B;AAC9C,uBAAa,CAAb;AACA,uCAA6B,CAA7B;SAFkB,CAApB,CADqC;OAAvC;;AAOA,UAAI,KAAK,OAAL,CAAa,MAAb,wBAAJ,EAAmC;AACjC,4BAAoB,0BAAO,iBAAP,EAA0B;AAC5C,8BAAoB,IAApB;AACA,iCAAuB,IAAvB;AACA,qBAAW,IAAX;SAHkB,CAApB,CADiC;OAAnC;;AAQA,aAAO,iBAAP,CA1BwB;;;;SAjCP","file":"MJMLRenderer.js","sourcesContent":["import { EmptyMJMLError } from './Error'\nimport { html as beautify } from 'js-beautify'\nimport { minify } from 'html-minifier'\nimport { parseInstance } from './helpers/mjml'\nimport defaultContainer from './configs/defaultContainer'\nimport documentParser from './documentParser'\nimport dom from './helpers/dom'\nimport {insertColumnMediaQuery, fixLegacyAttrs, fixOutlookLayout, clean, removeCDATA } from './helpers/post_render'\nimport getFontsImports from './helpers/getFontsImports'\nimport MJMLElementsCollection from './MJMLElementsCollection'\nimport React from 'react'\nimport ReactDOMServer from 'react-dom/server'\n\nconst debug = require('debug')('mjml-engine/mjml2html')\n\nexport default class MJMLRenderer {\n  constructor(content, options) {\n    this.content = content\n    this.options = options\n\n    if (typeof this.content == 'string') {\n      this.parseDocument()\n    }\n  }\n\n  parseDocument() {\n    debug('Start parsing document')\n    this.content = documentParser(this.content)\n    debug('Content parsed.')\n  }\n\n  render() {\n    if (!this.content) {\n      throw new EmptyMJMLError(`.render: No MJML to render in options ${this.options.toString()}`)\n    }\n\n    const rootElemComponent = React.createElement(MJMLElementsCollection[this.content.tagName.substr(3)], { mjml: parseInstance(this.content) })\n\n    debug('Render to static markup')\n    const renderedMJML = ReactDOMServer.renderToStaticMarkup(rootElemComponent)\n\n    debug('React rendering done. Continue with special overrides.')\n\n    const MJMLDocument = defaultContainer({ title: this.options.title, content: renderedMJML, fonts: getFontsImports({ content: renderedMJML }) })\n\n    return this._postRender(MJMLDocument)\n  }\n\n  _postRender(MJMLDocument) {\n    let $ = dom.parseHTML(MJMLDocument)\n\n    $ = insertColumnMediaQuery(this.$)\n    $ = fixLegacyAttrs(this.$)\n    $ = fixOutlookLayout(this.$)\n    $ = clean(this.$)\n\n    let finalMJMLDocument = dom.getHTML($)\n    finalMJMLDocument     = removeCDATA(MJMLDocument)\n\n    if (this.options.beautify && beautify) {\n      finalMJMLDocument = beautify(finalMJMLDocument, {\n        indent_size: 2,\n        wrap_attributes_indent_size: 2\n      })\n    }\n\n    if (this.options.minify && minify) {\n      finalMJMLDocument = minify(finalMJMLDocument, {\n        collapseWhitespace: true,\n        removeEmptyAttributes: true,\n        minifyCSS: true\n      })\n    }\n\n    return finalMJMLDocument\n  }\n}\n"],"sourceRoot":"/source/"}